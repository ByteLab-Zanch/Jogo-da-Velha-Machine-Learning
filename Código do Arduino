#include <Keypad.h>

// === Buzzer ===
const int pinoBuzzer = 3;

// === LEDs RGB (cátodo comum) ===
const int ledR[9] = {22, 25, 28, 31, 34, 37, 40, 43, 46}; // Pinos Vermelho
const int ledG[9] = {23, 26, 29, 32, 35, 38, 41, 44, 47}; // Pinos Verde
const int ledB[9] = {24, 27, 30, 33, 36, 39, 42, 45, 48}; // Pinos Azul

bool jogadas[9] = {false};

// === Teclado matricial ===
const byte ROWS = 4;
const byte COLS = 4;
char teclas[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','D','#'}
};

byte pinosLinhas[ROWS] = {50, 51, 52, 53};    
byte pinosColunas[COLS] = {8, 9, 10, 11};     

Keypad teclado = Keypad(makeKeymap(teclas), pinosLinhas, pinosColunas, ROWS, COLS);

void setup() {
  Serial.begin(9600);
  for (int i = 0; i < 9; i++) {
    pinMode(ledR[i], OUTPUT);
    pinMode(ledG[i], OUTPUT);
    pinMode(ledB[i], OUTPUT);
    apagaLed(i);
  }
  pinMode(pinoBuzzer, OUTPUT);
  playIntro(); // Música de início
  Serial.println("PRONTO");
}

void loop() {
  char tecla = teclado.getKey();
  if (tecla) {
    if (tecla >= '1' && tecla <= '9') {
      int pos = tecla - '1';
      if (!jogadas[pos]) {
        setLedVerde(pos);
        jogadas[pos] = true;
        playClick();  // Som de clique
        Serial.print("JOGADA_LOCAL:");
        Serial.println(pos);
      }
    } else if (tecla == 'D') {
      resetGame();
    }
  }

  if (Serial.available()) {
    delay(10);
    String comando = Serial.readStringUntil('\n');
    comando.trim();
    Serial.print("Recebido: ");
    Serial.println(comando);
    while (Serial.available()) Serial.read();

    bool comandoExecutado = false;

    if (comando.length() == 1 && isDigit(comando[0])) {
      int pos = comando.toInt();
      if (pos >= 0 && pos < 9 && !jogadas[pos]) {
        setLedVerde(pos);
        jogadas[pos] = true;
        comandoExecutado = true;
      }
    } else if (comando.startsWith("I")) {
      int posIA = comando.substring(1).toInt();
      if (posIA >= 0 && posIA < 9 && !jogadas[posIA]) {
        setLedAzul(posIA);
        jogadas[posIA] = true;
        comandoExecutado = true;
      }
    } else if (comando == "WIN_HUMANO") {
      piscarCor('G');
      playVitoriaHumano();
      comandoExecutado = true;
    } else if (comando == "WIN_IA") {
      piscarCor('B');
      playDarthVader();
      comandoExecutado = true;
    } else if (comando == "EMPATE") {
      piscarCor('P');
      playEmpate();
      comandoExecutado = true;
    } else if (comando == "RESET") {
      resetGame();
      comandoExecutado = true;
    }

    if (comandoExecutado) {
      Serial.println("OK");
    } else {
      Serial.println("Comando não reconhecido ou inválido.");
    }
  }
}

// === Sons com Buzzer ===
void playClick() {
  tone(pinoBuzzer, 1000, 100);
  delay(100);
  noTone(pinoBuzzer);
}

void playIntro() {
  tone(pinoBuzzer, 784, 150); delay(200);
  tone(pinoBuzzer, 988, 150); delay(200);
  tone(pinoBuzzer, 1175, 150); delay(200);
  noTone(pinoBuzzer);
}

void playVitoriaHumano() {
  tone(pinoBuzzer, 880, 300); delay(350);
  tone(pinoBuzzer, 988, 300); delay(350);
  tone(pinoBuzzer, 1047, 300); delay(350);
  noTone(pinoBuzzer);
}

void playEmpate() {
  int melodia[] = {659, 622, 587, 554, 523};
  int duracao = 200;
  for (int i = 0; i < 5; i++) {
    tone(pinoBuzzer, melodia[i], duracao);
    delay(duracao + 50);
  }
  noTone(pinoBuzzer);
}

void playDarthVader() {
  int melodia[] = {440, 440, 440, 349, 523, 440, 349, 523, 440};
  int duracao[] = {500, 500, 500, 350, 150, 500, 350, 150, 650};
  for (int i = 0; i < 9; i++) {
    tone(pinoBuzzer, melodia[i], duracao[i]);
    delay(duracao[i] * 1.3);
  }
  noTone(pinoBuzzer);
}

// === Controle de LEDs ===
void setLedAzul(int i) {
  apagaLed(i);
  digitalWrite(ledB[i], HIGH);
}

void setLedVermelho(int i) {
  apagaLed(i);
  digitalWrite(ledR[i], HIGH);
}

void setLedVerde(int i) {
  apagaLed(i);
  digitalWrite(ledG[i], HIGH);
}

void setLedRoxo(int i) {
  apagaLed(i);
  digitalWrite(ledR[i], HIGH);
  digitalWrite(ledB[i], HIGH);
}

void apagaLed(int i) {
  digitalWrite(ledR[i], LOW);
  digitalWrite(ledG[i], LOW);
  digitalWrite(ledB[i], LOW);
}

void piscarCor(char cor) {
  for (int pisca = 0; pisca < 5; pisca++) {
    for (int i = 0; i < 9; i++) {
      if (cor == 'B') setLedAzul(i);
      else if (cor == 'R') setLedVermelho(i);
      else if (cor == 'G') setLedVerde(i);
      else if (cor == 'P') setLedRoxo(i);
    }
    delay(300);
    for (int i = 0; i < 9; i++) apagaLed(i);
    delay(300);
  }
}

void resetGame() {
  for (int i = 0; i < 9; i++) {
    jogadas[i] = false;
    apagaLed(i);
  }
  Serial.println("PRONTO");
}
